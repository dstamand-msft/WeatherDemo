<!--
based on https://github.com/dotnet/dotnet-docker/blob/main/samples/run-tests-in-sdk-container.md#requirements
Container scenarios that use volume mounting can produce conflicts between the bin and obj directories in local and container environments.
To avoid that, you need to use a different set of obj and bin folders for your container environment.

Note: You may need to remove bin and obj directories if you run these instructions on Windows in both Windows and Linux container modes.
-->
<Project>

  <PropertyGroup>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(MSBuildProjectDirectory)/obj/**/*</DefaultItemExcludes>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(MSBuildProjectDirectory)/bin/**/*</DefaultItemExcludes>
  </PropertyGroup>
    <!--
	The official .NET images (Windows and Linux) set the well-known environment variables:

	* DOTNET_RUNNING_IN_CONTAINER
	* DOTNET_RUNNING_IN_CONTAINERS
	These values are used to determine when your ASP.NET Core workloads are running in the context of a container.
	see: https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-environment-variables#dotnet_running_in_container-and-dotnet_running_in_containers
	-->
  <PropertyGroup Condition="'$(DOTNET_RUNNING_IN_CONTAINER)' == 'true'">
    <BaseIntermediateOutputPath>$(MSBuildProjectDirectory)/obj/container/</BaseIntermediateOutputPath>
    <BaseOutputPath>$(MSBuildProjectDirectory)/bin/container/</BaseOutputPath>
  </PropertyGroup>

</Project>